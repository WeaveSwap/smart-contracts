THE DEX CONSISTS OF 3 SMART CONTRACTS:

1. Liquidity pool - this is the pair of two tokens, where we can swap one and get one back
2. Pool Tracker - this is our platform, it enables us to deploy new liquidity pools and track them
3. Swap contract - this is the swap, it enables us to do routing between pools if there is no direct pool

Main functionalities for the FRONTEND:

    we want to exchange DOGE for SHIB

    SWAP CONTRACT:

        getSwapAmount(inputTokenA, outputTokenB, inputAmountTokenA) => outputs amountTokenB that we get from inputing AmountTokenA
        getSwapAmount(DOGE.address, SHIB.address, 3DOGE) => 6SHIB

        swapAsset(inputTokenA, outputTokenB, inputAmountTokenA) => swaps the inputAmountTokenA of TokenA for TokenB
        swapAsset(DOGE.address, SHIB.address, 3DOGE) => (6SHIB) transfered to user wallet

        event swap(
        address userAddress,
        address address1,
        address address2,
        uint256 address1Amount,
        uint256 address2Amount
        );
        
    POOL TRACKER:

        address[] public tokens; => all available tokens, token list(only addresses, not symbols)

    FLOW:

    first we need to deploy new liquidity pool through pool tracker.
    when there are liquidity pools we can start swapping them through swap contract

    





        