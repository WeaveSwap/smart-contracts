{
  "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "lending_addressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lending_notEnoughTimePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lending_reserveNotAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "outOfReserve",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "amoutLended",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowingAPY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmedYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isTime",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastYieldFarmedTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAPY",
          "type": "uint256"
        }
      ],
      "name": "setBorrowingAPY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yieldTaken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x924afb6c621c7c97788ff6e2cce2a9bfc969a518492b49db83f178683f75ab79",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "transactionIndex": 0,
    "gasUsed": "973391",
    "logsBloom": "0x
    "blockHash": "0x3108da11b0833d824e480eb5e8a7bc4c00c28ecfedbb466b6cd31690c2aeac62",
    "transactionHash": "0x924afb6c621c7c97788ff6e2cce2a9bfc969a518492b49db83f178683f75ab79",
    "logs": [],
    "blockNumber": 6,
    "cumulativeGasUsed": "973391",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9"
  ],
  "numDeployments": 1,
  "solcInputHash": "b8e632be12782690bad8935fb1463051",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"lending_addressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lending_notEnoughTimePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lending_reserveNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"outOfReserve\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"amoutLended\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowingAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmedYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastYieldFarmedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"setBorrowingAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yieldTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lending/Lending.sol\":\"Lending\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Lending/Lending.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.9;\\n\\nerror outOfReserve();\\nerror outOfCollateral();\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\n\\nerror lending_addressNotAllowed();\\nerror lending_reserveNotAvailable();\\nerror lending_notEnoughTimePassed();\\n\\n// The contract functions can be called only from owner contract(onlyOwner)\\ncontract Lending {\\n    // Token address\\n    IERC20 public token;\\n\\n    // Owner contract\\n    address public ownerContract;\\n\\n    // Total amount of lended tokens\\n    uint256 public amoutLended;\\n\\n    // Available amount of lended tokens for borrowing\\n    uint256 public reserve;\\n\\n    // Modifier for owner\\n    modifier onlyOwner() {\\n        if (msg.sender != ownerContract) {\\n            revert lending_addressNotAllowed();\\n        }\\n        _;\\n    }\\n\\n    constructor(address _token) {\\n        token = IERC20(_token);\\n        ownerContract = msg.sender;\\n    }\\n\\n    // Borrow function\\n    function borrow(uint256 amount) public onlyOwner {\\n        if (reserve - amount < 0) {\\n            revert outOfReserve();\\n        }\\n        token.transfer(msg.sender, amount);\\n        // userBorrowed[msg.sender] +=  amount;\\n    }\\n\\n    // First approve\\n    function lend(uint256 amount) public onlyOwner {\\n        token.transferFrom(msg.sender, address(this), amount);\\n        reserve += amount;\\n    }\\n\\n    // Borrow\\n    function withdraw(uint256 amount) public onlyOwner {\\n        if (reserve - amount < 0) {\\n            revert lending_reserveNotAvailable();\\n        }\\n        token.transfer(msg.sender, amount);\\n        reserve -= amount;\\n    }\\n\\n    // Earn yield\\n    uint256 public borrowingAPY;\\n\\n    function setBorrowingAPY(uint256 newAPY) public onlyOwner {\\n        borrowingAPY = newAPY;\\n    }\\n\\n    uint256 public yield;\\n    uint256 public farmedYield;\\n\\n    mapping(address => uint256) public lastYieldFarmedTime;\\n    mapping(address => uint256) public yieldTaken;\\n\\n    function isTime(address user) public view returns (bool) {\\n        lastYieldFarmedTime[user];\\n        uint256 currentStamp = block.timestamp;\\n        if ((lastYieldFarmedTime[user] + 1 days) < currentStamp) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    function getYield(address user, uint256 tokenAmount) public returns (uint256) {\\n        if (isTime(user) == false) {\\n            revert lending_notEnoughTimePassed();\\n        }\\n        lastYieldFarmedTime[user] = block.timestamp; // Reentrancy guard\\n        uint256 yieldSoFar = yieldTaken[user];\\n        uint256 userLiquidity = (tokenAmount * 100) / amoutLended;\\n        uint256 availableYield = ((yield - ((yieldSoFar * 100) / userLiquidity)) * userLiquidity) /\\n            100;\\n\\n        if (availableYield > yield - farmedYield) {\\n            revert lending_notEnoughTimePassed(); // IN CASE THERE IS A LOT OF PEOPLE GETTING YIELD AT ONCE AND RATIOS GET CHANGED TOO MUCH\\n        }\\n        yieldTaken[msg.sender] += availableYield;\\n        farmedYield += availableYield;\\n        return availableYield;\\n\\n        // EMIT EVENT\\n        // emit yieldFarmed(msg.sender, availableYield);\\n    }\\n}\\n\",\"keccak256\":\"0xd968a27e45bb819bb8bdb7d8212a08f33e1a763d2eb00476652cae34f5f952ce\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200113838038062001138833981810160405281019062000037919062000129565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b610fcd806200016b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a2b2c32a11610097578063ed433abc11610066578063ed433abc14610260578063f88cc4a21461027e578063fc0c546a146102ae578063ffebfc8c146102cc576100f5565b8063a2b2c32a146101ec578063a6aa57ce1461020a578063c5ebeaec14610226578063cd3293de14610242576100f5565b80636140dfd0116100d35780636140dfd0146101645780637f74ac15146101825780639770b125146101a05780639a61c36a146101bc576100f5565b806328593984146100fa5780632e1a7d4d1461011857806359eec95b14610134575b600080fd5b6101026102fc565b60405161010f9190610b4d565b60405180910390f35b610132600480360381019061012d9190610b99565b610302565b005b61014e60048036038101906101499190610c24565b61049b565b60405161015b9190610c6c565b60405180910390f35b61016c61054c565b6040516101799190610b4d565b60405180910390f35b61018a610552565b6040516101979190610c96565b60405180910390f35b6101ba60048036038101906101b59190610b99565b610578565b005b6101d660048036038101906101d19190610c24565b610609565b6040516101e39190610b4d565b60405180910390f35b6101f4610621565b6040516102019190610b4d565b60405180910390f35b610224600480360381019061021f9190610b99565b610627565b005b610240600480360381019061023b9190610b99565b61077a565b005b61024a6108fa565b6040516102579190610b4d565b60405180910390f35b610268610900565b6040516102759190610b4d565b60405180910390f35b61029860048036038101906102939190610cb1565b610906565b6040516102a59190610b4d565b60405180910390f35b6102b6610af8565b6040516102c39190610d50565b60405180910390f35b6102e660048036038101906102e19190610c24565b610b1c565b6040516102f39190610b4d565b60405180910390f35b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610389576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546103999190610d9a565b10156103d1576040517f5a6c8ab300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161042c929190610dce565b602060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610e23565b5080600360008282546104919190610d9a565b9250508190555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205060004290508062015180600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105319190610e50565b1015610541576001915050610547565b60009150505b919050565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048190555050565b60086020528060005260406000206000915090505481565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ae576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070b93929190610ea6565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610e23565b5080600360008282546107709190610e50565b9250508190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610801576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546108119190610d9a565b1015610849576040517f0189383300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108a4929190610dce565b602060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190610e23565b5050565b60035481565b60065481565b60008015156109148461049b565b1515141561094e576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006002546064856109e89190610edd565b6109f29190610f66565b9050600060648283606486610a079190610edd565b610a119190610f66565b600554610a1e9190610d9a565b610a289190610edd565b610a329190610f66565b9050600654600554610a449190610d9a565b811115610a7d576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acc9190610e50565b925050819055508060066000828254610ae59190610e50565b9250508190555080935050505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b6000819050919050565b610b4781610b34565b82525050565b6000602082019050610b626000830184610b3e565b92915050565b600080fd5b610b7681610b34565b8114610b8157600080fd5b50565b600081359050610b9381610b6d565b92915050565b600060208284031215610baf57610bae610b68565b5b6000610bbd84828501610b84565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf182610bc6565b9050919050565b610c0181610be6565b8114610c0c57600080fd5b50565b600081359050610c1e81610bf8565b92915050565b600060208284031215610c3a57610c39610b68565b5b6000610c4884828501610c0f565b91505092915050565b60008115159050919050565b610c6681610c51565b82525050565b6000602082019050610c816000830184610c5d565b92915050565b610c9081610be6565b82525050565b6000602082019050610cab6000830184610c87565b92915050565b60008060408385031215610cc857610cc7610b68565b5b6000610cd685828601610c0f565b9250506020610ce785828601610b84565b9150509250929050565b6000819050919050565b6000610d16610d11610d0c84610bc6565b610cf1565b610bc6565b9050919050565b6000610d2882610cfb565b9050919050565b6000610d3a82610d1d565b9050919050565b610d4a81610d2f565b82525050565b6000602082019050610d656000830184610d41565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da582610b34565b9150610db083610b34565b925082821015610dc357610dc2610d6b565b5b828203905092915050565b6000604082019050610de36000830185610c87565b610df06020830184610b3e565b9392505050565b610e0081610c51565b8114610e0b57600080fd5b50565b600081519050610e1d81610df7565b92915050565b600060208284031215610e3957610e38610b68565b5b6000610e4784828501610e0e565b91505092915050565b6000610e5b82610b34565b9150610e6683610b34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e9b57610e9a610d6b565b5b828201905092915050565b6000606082019050610ebb6000830186610c87565b610ec86020830185610c87565b610ed56040830184610b3e565b949350505050565b6000610ee882610b34565b9150610ef383610b34565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2c57610f2b610d6b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7182610b34565b9150610f7c83610b34565b925082610f8c57610f8b610f37565b5b82820490509291505056fea264697066735822122012a235bf4a641d9d265bfd12f3845b621021cbc95a5d3d00b573a443e4a81e2264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a2b2c32a11610097578063ed433abc11610066578063ed433abc14610260578063f88cc4a21461027e578063fc0c546a146102ae578063ffebfc8c146102cc576100f5565b8063a2b2c32a146101ec578063a6aa57ce1461020a578063c5ebeaec14610226578063cd3293de14610242576100f5565b80636140dfd0116100d35780636140dfd0146101645780637f74ac15146101825780639770b125146101a05780639a61c36a146101bc576100f5565b806328593984146100fa5780632e1a7d4d1461011857806359eec95b14610134575b600080fd5b6101026102fc565b60405161010f9190610b4d565b60405180910390f35b610132600480360381019061012d9190610b99565b610302565b005b61014e60048036038101906101499190610c24565b61049b565b60405161015b9190610c6c565b60405180910390f35b61016c61054c565b6040516101799190610b4d565b60405180910390f35b61018a610552565b6040516101979190610c96565b60405180910390f35b6101ba60048036038101906101b59190610b99565b610578565b005b6101d660048036038101906101d19190610c24565b610609565b6040516101e39190610b4d565b60405180910390f35b6101f4610621565b6040516102019190610b4d565b60405180910390f35b610224600480360381019061021f9190610b99565b610627565b005b610240600480360381019061023b9190610b99565b61077a565b005b61024a6108fa565b6040516102579190610b4d565b60405180910390f35b610268610900565b6040516102759190610b4d565b60405180910390f35b61029860048036038101906102939190610cb1565b610906565b6040516102a59190610b4d565b60405180910390f35b6102b6610af8565b6040516102c39190610d50565b60405180910390f35b6102e660048036038101906102e19190610c24565b610b1c565b6040516102f39190610b4d565b60405180910390f35b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610389576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546103999190610d9a565b10156103d1576040517f5a6c8ab300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161042c929190610dce565b602060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610e23565b5080600360008282546104919190610d9a565b9250508190555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205060004290508062015180600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105319190610e50565b1015610541576001915050610547565b60009150505b919050565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048190555050565b60086020528060005260406000206000915090505481565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ae576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070b93929190610ea6565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610e23565b5080600360008282546107709190610e50565b9250508190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610801576040517feed3ab2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816003546108119190610d9a565b1015610849576040517f0189383300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108a4929190610dce565b602060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190610e23565b5050565b60035481565b60065481565b60008015156109148461049b565b1515141561094e576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006002546064856109e89190610edd565b6109f29190610f66565b9050600060648283606486610a079190610edd565b610a119190610f66565b600554610a1e9190610d9a565b610a289190610edd565b610a329190610f66565b9050600654600554610a449190610d9a565b811115610a7d576040517f1fa8d33700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acc9190610e50565b925050819055508060066000828254610ae59190610e50565b9250508190555080935050505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b6000819050919050565b610b4781610b34565b82525050565b6000602082019050610b626000830184610b3e565b92915050565b600080fd5b610b7681610b34565b8114610b8157600080fd5b50565b600081359050610b9381610b6d565b92915050565b600060208284031215610baf57610bae610b68565b5b6000610bbd84828501610b84565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf182610bc6565b9050919050565b610c0181610be6565b8114610c0c57600080fd5b50565b600081359050610c1e81610bf8565b92915050565b600060208284031215610c3a57610c39610b68565b5b6000610c4884828501610c0f565b91505092915050565b60008115159050919050565b610c6681610c51565b82525050565b6000602082019050610c816000830184610c5d565b92915050565b610c9081610be6565b82525050565b6000602082019050610cab6000830184610c87565b92915050565b60008060408385031215610cc857610cc7610b68565b5b6000610cd685828601610c0f565b9250506020610ce785828601610b84565b9150509250929050565b6000819050919050565b6000610d16610d11610d0c84610bc6565b610cf1565b610bc6565b9050919050565b6000610d2882610cfb565b9050919050565b6000610d3a82610d1d565b9050919050565b610d4a81610d2f565b82525050565b6000602082019050610d656000830184610d41565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da582610b34565b9150610db083610b34565b925082821015610dc357610dc2610d6b565b5b828203905092915050565b6000604082019050610de36000830185610c87565b610df06020830184610b3e565b9392505050565b610e0081610c51565b8114610e0b57600080fd5b50565b600081519050610e1d81610df7565b92915050565b600060208284031215610e3957610e38610b68565b5b6000610e4784828501610e0e565b91505092915050565b6000610e5b82610b34565b9150610e6683610b34565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e9b57610e9a610d6b565b5b828201905092915050565b6000606082019050610ebb6000830186610c87565b610ec86020830185610c87565b610ed56040830184610b3e565b949350505050565b6000610ee882610b34565b9150610ef383610b34565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2c57610f2b610d6b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7182610b34565b9150610f7c83610b34565b925082610f8c57610f8b610f37565b5b82820490509291505056fea264697066735822122012a235bf4a641d9d265bfd12f3845b621021cbc95a5d3d00b573a443e4a81e2264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 142,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)126"
      },
      {
        "astId": 144,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "ownerContract",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 146,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "amoutLended",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 148,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "reserve",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 260,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "borrowingAPY",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 274,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "yield",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 276,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "farmedYield",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 280,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "lastYieldFarmedTime",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 284,
        "contract": "contracts/Lending/Lending.sol:Lending",
        "label": "yieldTaken",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)126": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}